//496. Next Greater Element I
//中心思想就是从左往右SCAN， 如果STACK不为空并且PEEK的值小于当前SCAN 的值， 那就证明当前SCAN 值是PEEK 的NEXT GREATER number， HASHMAP 记录并且POP
//HASHMAP 存放的就是 <当前值， next greater number> . 所以最后再scan 一次得到res, 没有找到的设为-1
/*

We use a stack to keep a decreasing sub-sequence,
whenever we see a number x greater than stack.peek() we pop all elements less than x and for all the popped ones, their next greater element is x
For example [9, 8, 7, 3, 2, 1, 6]
The stack will first contain [9, 8, 7, 3, 2, 1] and then we see 6 which is greater than 1 so we pop 1 2 3 whose next greater element should be 6


*/
import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int[] res = new int[nums1.length];
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        Stack<Integer> s = new Stack<>();

        for(int i : nums2){
            while(!s.isEmpty() &&  s.peek() < i){
                map.put(s.pop(), i);
            }

            s.push(i);
        }

        for(int i = 0 ; i< nums1.length; i++){
            res[i] = map.getOrDefault(nums1[i], -1);
        }
        return res;
    }
}
