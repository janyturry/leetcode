/*
基本思路就是从左往右走一次， 补齐右括号消左括号
*/


class Solution {
    public int minInsertions(String s) {
        //右括号是左括号的两倍且需保证左括号 '(' 必须在对应的连续两个右括号 '))' 之前

        //设置变量分别用来存储左括号的数量，返回值
        int depth = 0, res = 0, len = s.length();
        for (int i = 0; i < len; i++) {
            if (s.charAt(i) == '(') depth++;
            //当前为右括号时
            else {
                //判断下一个是否也是右括号,是则i++，下一轮循环判断下下个数
                if (i + 1 < len && s.charAt(i + 1) == ')') i++;

                //如果不是，则意味着不管前边有没有左括号，此时都需要补上一个右括号
                else res++;

                //对前面有没有可以进行匹配的左括号判断
                //注意前面的操作已经完成是否需要添加右括号的判断
                //如果有可以进行匹配的左括号，且当前为右括号，此时需要depth-1
                //减一操作并不代表一定完成一个左括号与两个右括号的匹配，只有当下一个还是右括号时才有此意
                //如果左括号比右括号多则depth不会减到0，不管depth是否为0,最后都会对depth进行处理
                if (depth > 0) depth--;

                //若没有，则可以当做前面没有任何左括号
                //而前面已经完成是否补齐右括号的判断与操作，因此此时只需要补上左括号即可
                else res++;
            }
        }
        // 最后对depth处理，depth表示还有depth个左括号未完成平衡
        res += depth * 2;
        return res;
    }
}
