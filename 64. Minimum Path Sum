//64. Minimum Path Sum
//DP

class Solution {
    public int minPathSum(int[][] grid) {
         if(grid == null || grid.length ==0 || grid[0] == null || grid[0].length==0){
             return 0;
		 }		 
		 
		 int m = grid.length;
		 int n = grid[0].length;
		 
		 int [] res= new int[n];
        //只用一维数组
		res[0] = grid[0][0];
   
		
		 for(int i =0; i < m;i++){
		     for(int j = 0; j < n; j++){
                 if(i==0 && j >=1 ){
                     //res[j]代表的是res[i-1][j],  res[j-1] 代表的是res[i][j-1]
                     res[j] = res[j-1] + grid[i][j];
                 }else if(j ==0 && i>=1){
                     res[j] = res[j] + grid[i][j];
                 }else if(i>0 && j >0){
                     res[j] = Math.min(res[j] , res[j-1]) + grid[i][j];
                 }			 
			 }
		 }
		 
		 return res[n-1];
    }
}
