class MagicDictionary {
    Map<Integer,List<String>> map;
    Set<String> cache ;

    /** Initialize your data structure here. */
    public MagicDictionary() {
        map = new HashMap<>();
        cache = new HashSet<>();
    }

    /** Build a dictionary through a list of words */
    public void buildDict(String[] dict) {
        for(String s : dict){
            int len = s.length();
            map.putIfAbsent(len, new ArrayList<String>());
            map.get(len).add(s);
        }
    }

    /** Returns if there is any word in the trie that equals to the given word after modifying exactly one character */
    public boolean search(String word) {
        if(cache.contains(word)){
            return true;
        }
        int len = word.length();
        if(!map.containsKey(len)){
            return false;
        }
        for(String s : map.get(len)){
            int count = 0;
            for(int i =0 ; i < word.length(); i++){
                if(s.charAt(i) != word.charAt(i)){
                    count++;
                }
            }
            if(count ==1){
                cache.add(word);
                return true;
            }
        }
        return false;
    }
}

/**
 * Your MagicDictionary object will be instantiated and called as such:
 * MagicDictionary obj = new MagicDictionary();
 * obj.buildDict(dict);
 * boolean param_2 = obj.search(word);
 */
