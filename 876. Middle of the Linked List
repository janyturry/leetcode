/*

Time Complexity: O(N), where NN is the number of nodes in the given list.

Space Complexity: O(1), the space used by slow and fast.

 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode fast = head;
        ListNode slow = head;
        
        while(fast!= null && fast.next!= null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }

        if(fast!= null && fast.next!= null){
            return slow.next;
        }else{
            return  slow;
        }
    }
}
