/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Deque<Integer> d1 = new LinkedList<>();
        Deque<Integer> d2 = new LinkedList<>();
        
        while(l1 != null){
            d1.push(l1.val);
            l1 = l1.next;
        }
        
        while(l2 != null){
            d2.push(l2.val);
            l2 = l2.next;
        }
        
        int carry = 0;
        ListNode head = null;
        while(!d1.isEmpty() || !d2.isEmpty() || carry != 0){
            int sum  = 0;
            sum += d1.isEmpty()? 0 : d1.pop() ;
            sum += d2.isEmpty()? 0 : d2.pop();
            sum += carry;
            ListNode cur = new ListNode(sum%10);
            cur.next = head;
            head = cur;
            carry = sum/10;
        }
        
        return head;
    }
}
