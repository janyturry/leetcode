import java.util.HashMap;

//time : O(n)
class Solution {
    public int maxSubArrayLen(int[] nums, int k) {
        //prefixsum  + hashmap
//hashmap store <0...i total sum, 9...i >
        HashMap<Integer, Integer> map = new HashMap<>();
        int len = nums.length;
        int sum = 0;
        int res= 0;
        for(int i  =0 ; i < len; i++){
            sum+= nums[i];
            //corner case, 直接累加等于k ,最长长度直接就是index+1
            if(sum == k){
                res  = i+1;
            }else if(map.containsKey(sum - k)){
                res = Math.max(res , i -  map.get(sum - k));
            }

            if(!map.containsKey(sum)){
                map.put(sum, i);
            }
        }
        return res;
    }
}
