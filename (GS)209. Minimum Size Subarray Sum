//209. Minimum Size Subarray Sum

/*
时间复杂度：O(n)，其中 n 是数组的长度。指针 start 和 end 最多各移动 n 次。
空间复杂度：O(1)。
*/


//O(n)  two pointer

class Solution {
    public int minSubArrayLen(int target, int[] nums) {
       if(nums == null || nums.length <1){
            return 0;
        }
        int left  = 0;
        int right = 0;
        
        int len = nums.length;
        
        int res = Integer.MAX_VALUE;
        int sum = 0;
        
        while(right < len){
            sum+=nums[right];
            while(sum>=target){
                res = Math.min(res, right - left +1);
                sum-=nums[left];
                left++;
            }
            right++;
            
        }
        return res == Integer.MAX_VALUE ? 0 : res;
    }
}

