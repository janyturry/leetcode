
//234. Palindrome Linked List
//建立快慢指针，然后把后半段reverse
//然后再判断的是否相等
public class isPalindrome {
	public class ListNode {
		int val;
		ListNode next;

		ListNode(int x) {
			val = x;
		}
	}

	public boolean isPalindrome(ListNode head) {
		if(head == null){
			return true;
		}
	    
		ListNode fast = head;
		ListNode slow = head;
		
		while(fast != null &&  fast.next !=null ){
			fast = fast.next.next;
			slow = slow.next;
		}
		
		slow = reverse(slow);
		while(slow!=null){
			if(slow.val != head.val){
				return false;
			}
			slow = slow.next;
			head = head.next;
		}
		
		return true;
	}
   
	public ListNode reverse(ListNode head){
	    if(head == null){
	    	return head;
	    }
	    
	    ListNode pre = null;
	    while(head != null){
	    	ListNode next = head.next;
	    	head.next = pre;
	    	pre = head;
	    	head = next;
	    }
	    return pre;
	}

}
