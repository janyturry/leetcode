class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new LinkedList<>();

        Arrays.sort(nums);

        int len = nums.length;

        for(int i = 0 ; i <= len -4; i++){
            if(i != 0 && nums[i] == nums[i-1]){
                continue;
            }

            for(int j = i+1 ; j <= len-3 ;j++){
                if(j != i+1 && nums[j] == nums[j-1]){
                    continue;
                }

                int left = j + 1;
                int right = len-1;

                while(left < right){
                    int mid = left + (right - left)/2;
                    long sum =(long) nums[i] + nums[j] + nums[left] + nums[right];
                    if( sum  == target){
                        List<Integer> tmp = new LinkedList<>();
                        tmp.add(nums[i]);
                        tmp.add(nums[j]);
                        tmp.add(nums[left]);
                        tmp.add(nums[right]);
                        res.add(tmp);

                        left++;
                        right--;

                        while(left < right && nums[left]  == nums[left-1]){
                            left++;
                        }

                        while(left < right && nums[right] == nums[right + 1]){
                            right--;
                        }
                    }else if (sum < target){
                            left++;
                    }else{
                        right--;
                    }
                }
            }
        }
        return res;
    }
}
