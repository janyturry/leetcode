/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    class Node{
        int min;
        int max;
        int sum;
        Node(int min, int max, int sum){
            this.min = min;
            this.max = max;
            this.sum = sum;
        }
    }
    int res;
    public int maxSumBST(TreeNode root) {
        if(root == null){
            return 0;
        }
        
        helper(root);
        return res;
    }
    
    public Node helper(TreeNode root){
        if(root == null){
            return new Node(Integer.MAX_VALUE, Integer.MIN_VALUE, 0);
        }
        
        Node left = helper(root.left);
        Node right = helper(root.right);
        
        if(!(left != null && right != null && root.val > left.max && root.val < right.min)  ){
            return null;
        }
        
        res = Math.max(res, root.val + left.sum + right.sum);
        
        int min = Math.min(root.val, left.min);
        int max = Math.max(root.val, right.max);
        return new Node(min, max, root.val + left.sum + right.sum);
        
    }
}
