//378. Kth Smallest Element in a Sorted Matrix

//complexity: using Binary Search: O(N∗log(max−min))
class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int  n = matrix.length;

        int low = matrix[0][0];
        int high = matrix[n-1][n-1];

        while ( low < high){
            int mid =  low + (high - low)/2;
            int pair [] = new int[] { low,high };
            int count = countLess(matrix, mid, pair);

            if(count ==k){
                return pair[0];
            }

            if(count  >= k){
                high = pair[0];
            }else{
                low = pair[1];
            }
        }

        return low;
    }

    public int countLess(int[][] matrix, int mid, int[] pair){
        int row = matrix.length-1;
        int col  = 0;
        int count = 0;
        while(row >=0 && col <= matrix.length-1){
            if(matrix[row][col] > mid){
                pair[1] = Math.min(pair[1], matrix[row][col]);
                row--;
            }else{
                pair[0] = Math.max(matrix[row][col],  pair[0]);
                count+=(row+1);
                col++;
            }
        }

        return count;
    }
}
