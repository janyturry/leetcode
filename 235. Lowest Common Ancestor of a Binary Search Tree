
//235. Lowest Common Ancestor of a Binary Search Tree
//leetcode
//思路就是一共有三种情况. (1) 目标节点分别在左右两边或者是目标节点有一个或两个跟根节点重合， return root
//(2) 全部在左边， 
//(3) 全部在右边
public class lowestCommonAncestor235 {
	public class TreeNode {
		int val;
		TreeNode left;
		TreeNode right;

		TreeNode(int x) {
			val = x;
		}
	}
	
  //recursive
	public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		if (root == null) {
			return root;
		}

		if(root.val> p.val && root.val> q.val){
			return lowestCommonAncestor(root.left, p,q);
		}else if(root.val< p.val && root.val< q.val){
			return lowestCommonAncestor(root.right, p,q);
		}else{
			return root;
		}
	}
	
	
	//iterative
	/*
	public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
		if (root == null) {
			return root;
		}
		
		while(true){
			if(root.val> p.val && root.val> q.val){
				root = root.left;
			}else if(root.val< p.val && root.val< q.val){
				root = root.right;
			}else{
				return root;
			}
		}
	}
	*/
}
