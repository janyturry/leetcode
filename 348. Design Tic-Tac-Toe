//348. Design Tic-Tac-Toe


class TicTacToe {

    int[] rows;
    int[] cols;
    int d1;
    int d2;
    int n;
    /** Initialize your data structure here. */
    public TicTacToe(int n) {
        rows = new int[n];
        cols = new int[n];
        d1 = 0;
        d2 = 0;
        this.n = n;
    }

    /** Player {player} makes a move at ({row}, {col}).
     @param row The row of the board.
     @param col The column of the board.
     @param player The player, can be either 1 or 2.
     @return The current winning condition, can be either:
     0: No one wins.
     1: Player 1 wins.
     2: Player 2 wins. */
    public int move(int row, int col, int player) {
        int p = player ==1 ? 1 : -1;
        int target = player == 1 ? n : -n;

        if(row == col){
            d1+=p;
        }

        if(row + col + 1  == n){
            d2+=p;
        }

        rows[row] +=p;
        cols[col] +=p;
        if(rows[row]  == target || cols[col] == target || d1 == target || d2 ==target){
            return player;
        }

        return 0;

    }
}

/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */
