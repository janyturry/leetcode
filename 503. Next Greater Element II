//503. Next Greater Element II
//leetcode
//思路就是单调栈


import java.util.Arrays;
import java.util.Stack;

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] res = new int[nums.length];
        if(nums == null || nums.length < 1){
            return res;
        }

        int n = nums.length;
        //存放index
        Stack<Integer> s = new Stack<>();
        //剩下还在stack的都是没有next greater, 所以都设置为-1
        Arrays.fill(res, -1);
        //因为是循环数组，等于要找两遍,这里直接拓展了数组
        for(int i = 0 ; i < n*2; i++){
            //i%n直接反映出真正的索引指向是多少， 因为之前虚拟拓展了数组
            int num = nums[i%n];
            while(!s.isEmpty() && nums[s.peek()] < num){
                res[s.pop()] = num;
            }
            //真正要比较的数只需要push一遍就可以了
            if(i < n){
                s.push(i);
            }
        }
        return res;
    }
}
