class SparseVector {
    Map<Integer, Integer> map;
    
    SparseVector(int[] nums) {
        map = new HashMap<>();
        for(int i= 0 ; i < nums.length; i++){
            if(nums[i] != 0){
                map.put(i, nums[i]);                
            }
        }
    }
    
	// Return the dotProduct of two sparse vectors
    public int dotProduct(SparseVector vec) {
        int res = 0;
        if(this.map.size() > vec.map.size()){
            return vec.dotProduct(this);
        }else{
            for(int i: map.keySet()){
                if(vec.map.containsKey(i)){
                res+= (map.get(i)* vec.map.get(i)) ;                     
                }
            }
            
            
        }
        return res;
    }
}

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1 = new SparseVector(nums1);
// SparseVector v2 = new SparseVector(nums2);
// int ans = v1.dotProduct(v2);
