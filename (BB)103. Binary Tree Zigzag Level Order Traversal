/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 //BFS
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new LinkedList<>();
        
        if(root == null){
            return res;
        }
        
        Queue<TreeNode> q = new LinkedList<>();
        boolean flag = true;
        q.offer(root);
        
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> sub = new LinkedList<>();
            for(int i = 0; i < size; i++){
                TreeNode cur =  q.poll();
                if(flag){
                    sub.add(cur.val);
                }else{
                    sub.add(0,cur.val);
                }
                
                if(cur.left != null){
                   q.offer(cur.left); 
                }
                
                if(cur.right != null){
                    q.offer(cur.right);
                }
            }
            res.add(sub);
            flag = !flag;
        }
        return res;
    }
}
