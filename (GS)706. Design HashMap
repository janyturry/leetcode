class MyHashMap {
    int cap;
    pair[] ar;
    class pair{
        int key;
        int val;
        pair next;
        pair(int key, int val){
            this.key = key;
            this.val = val;
        }
    }

    public MyHashMap() {
        cap = 100000;
        ar = new pair[cap];
    }
    
    public void put(int key, int value) {
        int index = getIndex(key);
        if(ar[index] == null){
            ar[index] = new pair(-1,-1);
        }
        
        pair entry = ar[index];
        pair preBucket = findPreBucket(entry, key);
        if(preBucket.next == null){
            pair next = new pair(key, value);
            preBucket.next = next;
        }else{
            preBucket.next.val = value;
        }
    }
    
    public int get(int key) {
         int index = getIndex(key);
         if(ar[index] == null){
            return -1;
         }
        
        pair entry = ar[index];
        pair preBucket = findPreBucket(entry, key);
        if(preBucket.next == null){
            return -1;
        }else{
            return preBucket.next.val;
        }
         
        
    }
    
    public void remove(int key) {
         int index = getIndex(key);
         if(ar[index] == null){
            return ;
         }
        
         pair entry = ar[index];
         pair preBucket = findPreBucket(entry, key);
        if(preBucket.next == null){
            return ;
        }else{
           preBucket.next = preBucket.next.next; 
        }
        
        
        
    }
    
    public int getIndex(int key){
        return key%cap;
    }
    
    public pair findPreBucket(pair bucket, int key){
        pair pre = null;
        pair cur = bucket;
        while(cur != null && cur.key != key){
            pre = cur;
            cur = cur.next;
        }
        return pre;
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */
