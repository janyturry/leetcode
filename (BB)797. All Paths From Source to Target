//DFS
class Solution {
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> res= new LinkedList<>();
        if(graph == null || graph.length == 0){
            return res;
        }
        
        boolean [] visit = new boolean[graph.length];
        List<Integer> path = new LinkedList<>();
        path.add(0);
        visit[0] = true;
        
        dfs(graph, 0, path,res, visit);
        
        return res;
    }
    
    public void dfs(int[][] graph, Integer node,List<Integer> path,List<List<Integer>> res, boolean[] visit){
        if(node == graph.length -1){
            res.add(new LinkedList<Integer>(path));
            return;
        }
        
        for(Integer tmp : graph[node]){
           path.add(tmp);
           visit[tmp] = true;
           dfs(graph, tmp, path,res,visit);
           path.remove(path.size()-1);
           visit[tmp] = false; 
        }
        
        return;
    }
}
