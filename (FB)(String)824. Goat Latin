/*
时间复杂度：O(N*N)，其中 N 是 S 的长度。这包含旋转单词的复杂度以及添加额外 "a" 字符。
空间复杂度：O(N*N)，空间需要考虑加入的额外字符 "a"

*/


class Solution {
    public String toGoatLatin(String S) {
        String[] s = S.split(" ");
        
        String dummyEnd = "a";
        
        Set<Character> set = new HashSet<>();
        set.add('a');
        set.add('e');
        set.add('i');
        set.add('o');
        set.add('u');
        set.add('A');
        set.add('E');
        set.add('I');
        set.add('O');
        set.add('U');
        StringBuilder res = new StringBuilder();
        
        for(int i =0; i < s.length; i++){
            String cur = s[i];
            char c = cur.charAt(0);
            if(set.contains(c)){
                cur = cur + "ma"  + dummyEnd;
            }else{
                cur = cur.substring(1) + c + "ma" + dummyEnd;
            }
            dummyEnd = dummyEnd + "a";
            res.append(" " + cur);
        }
        
        return res.substring(1);
        
    }
}



class Solution {
    public String toGoatLatin(String S) {
        Set<Character> set = new HashSet<>(Arrays.asList('a','e','i','o','u','A','E','I','O'
        ,'U'));

        String res = new String("");
        String[] ar = S.split("\\s");
        int count = 1;
        for(String cur : ar){
            String sub = new String("");
            if(set.contains(cur.charAt(0))){
                sub =  cur + "ma";
            }else{
                sub =  cur.substring(1) + cur.charAt(0) + "ma";
            }
            for(int i =0 ; i< count; i++){
                sub+="a";
            }
            res = res + " " + sub;
            count++;
        }
        
        return res.substring(1);
    }
}
