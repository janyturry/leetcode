

//直接方法

class Solution {
    public int longestOnes(int[] A, int K) {
        int res= 0;

        int left = 0;
        for(int right = 0 ; right <= A.length-1; right++){
            if(A[right] == 0){
                K--;
            }
            while(K<0){
                if(A[left++] == 0){
                    K++;
                }
            }
            res = Math.max(res, right - left + 1);
        }
        return res;
    }
}



//Find the longest subarray with at most K zeros.
//不缩短距离， 如果碰到就保持往前走
class Solution {
    public static int longestOnes(int[] A, int K) {
        int res= 0;

        int left = 0;
        for(int right = 0 ; right <= A.length-1; right++){
            if(A[right] == 0){
                K--;
            }
            if(K<0){
                if(A[left++] == 0){
                    K++;
                }
            }
            res   = right - left + 1;
        }
        return res;
    }
}

