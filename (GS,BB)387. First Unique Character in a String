
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Map;

//387. First Unique Character in a String
//ASCII Table 256 长度
//循环两次
public class firstUniqChar {
	/* 2 pass, 题目限定了只有小写字母， 所以可以 - 'a'
	public int firstUniqChar(String s) {
		if (s == null || s.length() == 0) {
			return -1;
		}

		int[] res = new int[256];

		for (int i = 0; i < s.length(); i++) {
			res[s.charAt(i) - 'a']++;
		}

		for (int i = 0; i < s.length(); i++) {
			if (res[s.charAt(i) - 'a'] == 1) {
				return i;
			}
		}

		return -1;
	}
	*/
	
	
	//follow up 当 data strea 特别大的时候需要用这种解法
	//方法2 , 1 pass
class Solution {
    public int firstUniqChar(String s) {
        if(s == null || s.length() < 1){
            return -1;
        }
        
        
        Map<Character, Integer> map = new LinkedHashMap<>();
        Set<Character> set = new HashSet<>();
        
        
        for(int i = 0 ; i< s.length();i++){
           if(!set.contains(s.charAt(i))){
               set.add(s.charAt(i));
               map.put(s.charAt(i), i);
           }else{
               map.remove(s.charAt(i));
           }
        }
        
        if(map.size() == 0){
            return -1;
        }
        
        for(Character c : map.keySet()){
                return map.get(c);
        }
        
        return -1;
    }
}
