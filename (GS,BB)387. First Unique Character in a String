
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Map;

//387. First Unique Character in a String
//ASCII Table 256 长度
//循环两次
public class firstUniqChar {
	/* 2 pass, 题目限定了只有小写字母， 所以可以 - 'a'
	public int firstUniqChar(String s) {
		if (s == null || s.length() == 0) {
			return -1;
		}

		int[] res = new int[256];

		for (int i = 0; i < s.length(); i++) {
			res[s.charAt(i) - 'a']++;
		}

		for (int i = 0; i < s.length(); i++) {
			if (res[s.charAt(i) - 'a'] == 1) {
				return i;
			}
		}

		return -1;
	}
	*/
	
	
	//follow up 当 data strea 特别大的时候需要用这种解法
	//方法2 , 1 pass
	public int firstUniqChar(String s) {
	    Map<Character, Integer> map   = new LinkedHashMap<Character, Integer>();
	    HashSet<Character> set = new HashSet<Character>();
	    for(int i = 0; i < s.length(); i++){
	        if(set.contains(s.charAt(i))){
	        	map.remove(s.charAt(i));
	        }else{
	        	set.add(s.charAt(i));
	        	map.put(s.charAt(i), i);
	        }
	    }
	    
	    return map.size() >0 ? map.entrySet().iterator().next().getValue() : -1;      
	}
}
