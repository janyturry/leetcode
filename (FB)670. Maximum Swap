/*
基本思路先从右往左遍历， 找到每个位置的最大的INDEX 的映射
然后从左往右遍历， 找到不等于自身的， 交换

*/

class Solution {
    public int maximumSwap(int num) {
        if( num < 1){
            return num;
        }
        
        char[] ar = Integer.toString(num).toCharArray();
        int len  = ar.length;
        
        int[] mapIndex = new int[len];
        int maxIndex = len-1;
        for(int i = len-1; i>=0 ; i--){
            if( ar[maxIndex] < ar[i]){
                maxIndex = i;
            }
            mapIndex[i] = maxIndex;
        }
        
        for(int i = 0 ; i < len; i++){
            if(ar[i] != ar[mapIndex[i]]){
                char tmp = ar[mapIndex[i]];
                ar[mapIndex[i]] = ar[i];
                ar[i] = tmp;
                break;
            }
        }
        
        String res = new String(ar);
        return Integer.parseInt(res);
    }
}
