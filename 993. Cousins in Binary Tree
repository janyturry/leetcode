//993. Cousins in Binary Tree

import javax.swing.tree.TreeNode;
import java.util.LinkedList;
import java.util.Queue;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

//BFS
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            int size = q.size();
            int count = 0;

            for(int i = 0 ; i < size; i++){

                TreeNode tmp = q.poll();
                if(tmp.val == x || tmp.val ==y){
                    count++;
                    if(count ==2){
                        return true;
                    }
                }

                if(helper(tmp, x, y)){
                    if(tmp.left != null){
                        q.offer(tmp.left);
                    }

                    if(tmp.right != null){
                        q.offer(tmp.right);
                    }
                }
            }
        }

        return false;
    }

    public boolean helper(TreeNode root, int x, int y) {
        if(root != null && root.left != null && root.right  != null){
            if((root.left.val  == x && root.right.val == y) || (root.left.val == y && root.right.val ==x) ){
                return false;
            }
        }
        return true;
    }
}
