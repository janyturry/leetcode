/*
N is the length of words since we go through the words list to compare each string with its previous one.
S is the max length of word in the words list since in the helper function, the worst case is encounter the max string.

Time O(NS)
Space O(1)

*/

class Solution {
    int[] ordering  =new int[26];
    public boolean isAlienSorted(String[] words, String order) {
        for(int i = 0 ; i < order.length();i++){
            char c = order.charAt(i);
            ordering[c -'a'] = i;
        }

        for(int i = 0 ; i < words.length-1; i++){
            if(bigger(words[i] , words[i+1])){
                return false;
            }
        }
        return true;

    }

    public boolean bigger(String a, String b){
        int m = a.length();
        int n = b.length();

        for(int i = 0 ; i< m && i <n; i++){
            if(a.charAt(i) != b.charAt(i)){
                return ordering[a.charAt(i) - 'a'] > ordering[b.charAt(i) - 'a'] ;
            }
        }
        return m >n;
    }
}
