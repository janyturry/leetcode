//16. 3Sum Closest
//如果是快速排序的 O(logn) 再加上 O（n²），所以就是 O（n²）。

class Solution {
    public int threeSumClosest(int[] nums, int target) {
            Arrays.sort(nums);

         if(nums == null || nums.length < 3){
            return 0;
        }    
        int n = nums.length-1;
        //int sum = nums[0]+ nums[1] + nums[n];
        int close =nums[0]+ nums[1] + nums[n];
        
        for(int i = 0 ; i<= n-2; i++){
            int left = i+1;
            int right = n;
            while(left < right){
                int sum = nums[i] + nums[left] + nums[right];
                if(sum == target){
                    return sum;
                }else if(sum > target){
                    while(left < right && nums[right] == nums[right-1]){
                        right--;
                    }
                    right--;
                    
                }else{
                     while(left < right && nums[left] == nums[left+1]){
                        left++;
                    }
                    left++;
                }
              if( Math.abs( close - target)  > Math.abs(sum-target)){
                  close = sum;
              }
                
            }
        }
        return close;
    }
}
