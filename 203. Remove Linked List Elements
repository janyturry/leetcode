
//203. Remove Linked List Elements
//leetcode
//有ietrative 和 revursion 两种方法， 设置dummy node, cur 指向dummy,然后判断cur.next.val == val, 一直往后移动
//recursion , 

public class removeElements {
	public class ListNode {
		int val;
		ListNode next;

		ListNode(int x) {
			val = x;
		}
	}

	//ietrative
	public ListNode removeElements(ListNode head, int val) {
		if(head == null){
			return head;
		}
		
		ListNode dummy = new ListNode(0);
		dummy.next = head;
		ListNode cur = dummy;
		
		while(cur != null && cur.next != null){
			if(cur.next.val == val){
				cur.next = cur.next.next;
			}else{
				cur = cur.next;
			}
		}
		return dummy.next;
	}
	
	//recursion
	public ListNode removeElements2(ListNode head, int val) {
		if(head == null){
			return head;
		}
		
		ListNode next = removeElements2(head.next, val);
		if(head.val == val){
			return next;
		}else{
			head.next = next;
			return head;
		}
	}
}
