//662. Maximum Width of Binary Tree

import javax.swing.tree.TreeNode;
import java.util.LinkedList;
import java.util.Queue;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        if(root == null){
            return 0;
        }

        Queue<TreeNode> q1 = new LinkedList<>();
        Queue<Integer> q2 = new LinkedList<>();

        q1.offer(root);
        q2.offer(1);

        int max = Integer.MIN_VALUE;

        while(!q1.isEmpty()){
            int size = q1.size();
            int s = 0;
            int e = 0;
            for(int i = 0 ; i < size ;i++){
                TreeNode cur = q1.poll();
                int curIndex = q2.poll();

                if(i ==0){
                    s = curIndex;
                }
                if(i == size -1){
                    e = curIndex;
                }

                if(cur.left != null){
                    q1.offer(cur.left);
                    q2.offer(curIndex*2);
                }

                if(cur.right != null){
                    q1.offer(cur.right);
                    q2.offer(curIndex*2 +1);
                }


            }

            max = Math.max(max ,  e-s +1 );


        }
        return max;

    }
}
