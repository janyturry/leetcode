
/*
Complexity Analysis
Time Complexity: O(N) where N is the length of A.
Space Complexity: O(N)
*/
//two pointer
class Solution {
    public int[] sortedSquares(int[] A) {
        int n = A.length;
        int [] res = new int[n];
        int left = 0; 
        int right = n-1;
        for(int i = n-1; i >=0 ;i--){
            if(Math.abs(A[left]) > Math.abs(A[right])){
                res[i] = A[left]*A[left];
                left++;
            }else{
                res[i] = A[right]*A[right];
                right--;
            }
            
        }
        return res;
    }
}
