//102. Binary Tree Level Order Traversal


import javax.swing.tree.TreeNode;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> res = new LinkedList<List<Integer>>();
        if(root == null){
            return res;
        }

        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.offer(root);

        while(!q.isEmpty()){
            List<Integer> sub = new LinkedList<>();
            int n = q.size();
            for(int i = 0 ; i< n; i++){
                TreeNode tmp = q.poll();
                sub.add(tmp.val);
                if(tmp.left != null){
                    q.offer(tmp.left);
                }

                if(tmp.right != null){
                    q.offer(tmp.right);
                }
            }

            res.add(new LinkedList<Integer>(sub));
        }
        return res;
    }
}
