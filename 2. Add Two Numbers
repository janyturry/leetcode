
//2. Add Two Numbers
//leetcode
/*
 Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
 Output: 7 -> 0 -> 8
 Explanation: 342 + 465 = 807.
 */
//思路是先建立dummy点，然后从左到右直接+， 最后记得检查有没有进位， 哪怕两边都是l2和l2都是空着的
public class addTwoNumbers {

	public class ListNode {
		int val;
		ListNode next;

		ListNode(int x) {
			val = x;
		}
	}

	public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
		int carry = 0;
		ListNode dummy = new ListNode(0);
		ListNode dummyS = dummy;
		while (l1 != null && l2 != null) {
			int tmp = l1.val + l2.val + carry;
			dummyS.next = new ListNode(tmp % 10);
			dummyS = dummyS.next;

			carry = tmp / 10;
			l1 = l1.next;
			l2 = l2.next;
		}
		while (l1 != null) {
			int tmp = l1.val + carry;
			dummyS.next = new ListNode(tmp % 10);
			dummyS = dummyS.next;
			carry = tmp / 10;
			l1 = l1.next;
		}
		while (l2 != null) {
			int tmp = l2.val + carry;
			dummyS.next = new ListNode(tmp % 10);
			dummyS = dummyS.next;
			carry = tmp / 10;
			l2 = l2.next;
		}
		if (carry != 0) {
			dummyS.next = new ListNode(carry);
			dummyS = dummyS.next;
		}
		return dummy.next;
	}
}
