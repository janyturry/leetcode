
//good version

class Solution {
    public int countCharacters(String[] words, String chars) {
        int res = 0;
        int[]count = new int[26];
        for(char c : chars.toCharArray()){
            count[c - 'a']++;
        }

        for(String s : words){
            int[] copy = Arrays.copyOf(count, count.length);
            int wordLen = 0;
            for(char c : s.toCharArray()){
                if(copy[c-'a'] > 0){
                    copy[c-'a']--;
                    wordLen++;
                }else{
                    break;
                }
            }
            if(wordLen == s.length()){
                res+= s.length();
            }
        }
        return res;
    }
}

//my version

import java.util.HashMap;

class Solution {
    public int countCharacters(String[] words, String chars) {
        int res = 0;
        HashMap<Character, Integer> map = new HashMap<>();
        for(char c : chars.toCharArray()){
            map.put(c , map.getOrDefault(c ,0)+1);
        }

        for(String s : words){
            int [] c = new int[256];
            for(char  ch : s.toCharArray()){
                c[ch-'a']++;
            }
            for(int i = 0 ; i < s.length(); i++){
                if(map.getOrDefault(s.charAt(i),0) < c[s.charAt(i)-'a']){
                    break;
                }
                if(i == s.length()-1){
                    res+=s.length();
                }
            }
        }
        return res;
    }
}
