//思路就是直接BFS 往下面扫， 每一层结束算一次


class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new LinkedList<>();
        
        if(root == null){
            return res;
        }
        
        Deque<TreeNode> q = new LinkedList<>();
        
        q.offer(root);
        
        while(!q.isEmpty()){
            int size = q.size();
            double sum = 0;
            for(int i = 0 ; i< size; i++){
                TreeNode cur = q.poll();
                sum+=cur.val;
                if(cur.left!=null){
                    q.offer(cur.left);
                }
                if(cur.right != null){
                    q.offer(cur.right);
                }
            }
            
            double subRes  = sum/size;
            res.add(subRes);
        }
        
        return res;
    }
}
