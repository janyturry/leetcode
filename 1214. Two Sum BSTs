

//Tree 1 :  inorder
//Tree 2 : revise inorder
class Solution {
    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {
        if(root1 == null || root2 == null){
            return false;
        }

        Stack<TreeNode>  stack1 = new Stack<TreeNode>();
        Stack<TreeNode>  stack2 = new Stack<TreeNode>();


        while(true){
            while(root1 != null){
                stack1.push(root1);
                root1 = root1.left;
            }

            while(root2 != null){
                stack2.push(root2);
                root2 = root2.right;
            }

            if(stack1.isEmpty() || stack2.isEmpty()){
                break;
            }

            TreeNode left = stack1.peek();
            TreeNode right = stack2.peek();

            if(left.val + right.val == target){
                return true;
            }else if(left.val + right.val < target){
                stack1.pop();
                root1 = left.right;
            }else if(left.val + right.val > target){
                stack2.pop();
                root2 = right.left;

            }
        }
        return false;
    }
