//Time & Space: O(n)
class Solution {
    List<TreeNode> l = new ArrayList<>();
    public TreeNode balanceBST(TreeNode root) {
        if(root == null){
            return root;
        }

        visit(root);
        return helper(0, l.size()-1);
    }

    public void visit(TreeNode root){
        if(root == null){
            return ;
        }
        visit(root.left);
        l.add(new TreeNode(root.val));
        visit(root.right);
    }

    public TreeNode helper(int s, int e){
        if(s>e){
            return null;
        }
        int mid = s + (e-s)/2;
        TreeNode root  = l.get(mid);
        root.left = helper(s, mid-1);
        root.right = helper(mid+1, e);
        return root;
    }
}
