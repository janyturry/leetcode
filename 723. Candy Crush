//723. Candy Crush


class Solution {
    public int[][] candyCrush(int[][] board) {
        int m = board.length;
        int n = board[0].length;

        boolean contin = false;


        //水平
        for(int i =  0; i < m; i++){
            for(int j = 0; j < n-2; j++){
                int cur = Math.abs(board[i][j]);
                //因为检查都是绝对值， 所以可以检查出三个或者三个以上的
                if(cur > 0 && Math.abs(board[i][j+1]) == cur && Math.abs(board[i][j+2]) == cur){
                    board[i][j] = board[i][j+1] = board[i][j+2] = -cur;
                    contin = true;
                }
            }
        }

        //垂直
        for(int i =  0; i < n; i++){
            for(int j = 0; j < m-2; j++){
                int cur = Math.abs(board[j][i]);
                if(cur > 0 && Math.abs(board[j+1][i]) == cur && Math.abs(board[j+2][i]) == cur){
                    board[j][i] = board[j+1][i] = board[j+2][i] = -cur;
                    contin = true;
                }
            }
        }

        //垂直碰撞
        for(int i = 0; i < n;i++){
            int index= m-1;
            for(int j = m- 1; j >=0; j--){
                if(board[j][i] >=0){
                    board[index--][i] = board[j][i];
                }
            }

            for(int k = index; k >=0; k--){
                board[k][i] = 0;
            }
        }

        return contin ? candyCrush(board) : board;

    }
}
