//694. Number of Distinct Islands


//time: n*n
//存储的是方向， 这样可以确定形状
import java.util.HashSet;

class Solution {
    public int numDistinctIslands(int[][] grid) {
        if(grid == null || grid.length < 1 || grid[0] == null || grid[0].length<1){
            return 0;
        }

        HashSet<String> set = new HashSet<>();
        for(int i = 0;  i< grid.length; i++){
            for(int j = 0; j < grid[0].length; j++){
                if(grid[i][j] !=0){
                    StringBuilder sb = new StringBuilder();
                    dfs(grid,i,j,sb,"o");
                    set.add(sb.toString());
                }
            }
        }

        return set.size();
    }

    public void dfs(int[][]grid,    int i , int j, StringBuilder sb, String dir){
        if(i < 0 || i >= grid.length || j <0 || j >=grid[0].length || grid[i][j] == 0){
            return;
        }

        grid[i][j] = 0;

        sb.append(dir);

        dfs(grid, i+1,j,sb,"d");
        dfs(grid, i-1,j,sb,"u");
        dfs(grid, i,j+1,sb,"r");
        dfs(grid, i,j-1,sb,"l");

        sb.append("b");
    }
}
