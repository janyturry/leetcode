
//852. Peak Index in a Mountain Array
//bloomberg


public class peakIndexInMountainArray {
	
	// O(N)
	/*
	public int peakIndexInMountainArray(int[] A) {
		if (A == null || A.length <= 2) {
			return -1;
		}
		for (int i = 1; i + 1 <= A.length - 1; i++) {
			if (A[i] > A[i + 1]) {
				return i;
			}
		}
		return -1;
	}
	*/
	
	
	//Binary search, O(logN)
	public int peakIndexInMountainArray(int[] A) {
		if (A == null || A.length <= 2) {
			return -1;
		}
		
	    int s = 0;
	    int e = A.length-1;
	    
	    while(s + 1 < e){
	    	int mid = s + (e -s)/2;
	    	if(mid >0 && mid < A.length -1) {
	    		if(A[mid] > A[mid-1] && A[mid] > A[mid +1]){
	    			return mid;
	    		}else if( A[mid] < A[mid+1]){
	    			s = mid;
	    		}else{
	    			e = mid;
	    		}
	    	}else{
	    		return -1;
	    	}
	    }
		return -1;
	}
	
}
