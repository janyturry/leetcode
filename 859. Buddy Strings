//题目就是说要在A上面SWAP一次，如果能等于B， 那么就return true

class Solution {
    public boolean buddyStrings(String A, String B) {
        //长度不等， 直接false
        if(A.length() != B.length()){
            return false;
        }
//如果两个string一样，那么就检查有没有重复，如果没有重复，例如abcd，这种是不能通过一次SWAP就得到。
        //如果有重复的，那么久可以直接交换两个重复的值，例如abb。b和b交换
        if(A.equals(B)){
            Set<Character> set = new HashSet<>();
            for(char c: A.toCharArray()){
                if(!set.add(c)){
                    return true;
                }
            }
            return false;
            //两个A和B不相等，那么刚好有两个数是不一样的，并且前后交换是一样
        }else{
            List<Integer> ar = new LinkedList<>();
            for(int i = 0 ; i< A.length() ; i++){
                if(A.charAt(i) != B.charAt(i)){
                    ar.add(i);
                }
            }

            if(ar.size() == 2 && A.charAt(ar.get(0)) ==B.charAt(ar.get(1))&& A.charAt(ar.get(1)) == B.charAt(ar.get(0))){
                return true;
            }
            return false;
        }
    }
}
