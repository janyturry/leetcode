
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

//15. 3Sum
//leetcode
//思路： 选定第一个数，然后从0 到 倒数第三个， 其他选定low 和 high,  注意最开始一定要先排序，遇到重复要跳过
public class threeSum {
	public List<List<Integer>> threeSum(int[] nums) {
		List<List<Integer>> res = new ArrayList<List<Integer>>();
		if(nums == null || nums.length < 3){
			return res;
		}
		 Arrays.sort(nums);
		for(int i = 0; i <= nums.length-3; i++){
			if(i ==0 || i>0 && nums[i] != nums[i-1]){
				int low = i+1;
				int high = nums.length-1;
				int sum = 0 - nums[i];
				while(low < high){
					if(nums[low] + nums[high] == sum){
						res.add(Arrays.asList(nums[i], nums[low], nums[high]));
						while(low < high && nums[low] == nums[low+1]){
							low++;
						}
						
						while(low < high && nums[high] == nums[high-1]){
							high--;
						}
						
						low++;
						high--;
					}else if(nums[low] + nums[high] < sum){
						low++;
					}else{
						high--;
					}
				}
			}
		}
		
		return res;
	}
}
